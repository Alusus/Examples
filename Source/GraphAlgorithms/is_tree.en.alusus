import "Srl/Array";

use Srl;

func dfs(node: Int, parentNode: Int, visited: ref[Array[Bool]], graph: ref[Array[Array[Int]]]): Bool {
    visited(node) = true;

    def i: Int;
    for i = 0 , i < graph(node).getLength(), i++ {
        def childNode: Int = graph(node)(i);
        if !visited(childNode) {
            if dfs(childNode, node, visited, graph) {
                return true;
            }
        }
        else if childNode != parentNode {
            return true;
        }
    }
    return false;
}


func isTree(graph: ref[Array[Array[Int]]]): Bool {
    def visited: Array[Bool];
    def i: Int;
    for i = 0 , i < graph.getLength() , i++ {
        visited.add(false);
    }

    if dfs(0, -1, visited, graph) {
        return false;
    }

    for i = 0 , i < graph.getLength() , i++ {
        if !visited(i) {
            return false;
        }
    }

    return true;
}
