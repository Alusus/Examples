اشمل "مـتم/طـرفية"؛
اشمل "مـتم/مـصفوفة"؛

استخدم مـتم؛

دالة هل_حلقي(عقدة: صـحيح، مزارة: سند[مـصفوفة[صـحيح]]، بيان: سند[مـصفوفة[مـصفوفة[صـحيح]]]): ثـنائي {
	إذا مزارة(عقدة) == 2 {
		ارجع صح؛
	}
	مزارة(عقدة) = 1؛
	
	عرف دليل: صـحيح؛
	لكل دليل = 0 ، دليل < بيان(عقدة).هات_الطول() ، دليل++ {
		عرف عقدة_ابن: صـحيح = بيان(عقدة)(دليل)؛
		إذا مزارة(عقدة_ابن) == 1 {
			ارجع صح؛
		}
		وإلا إذا مزارة(عقدة_ابن) == 0 && هل_حلقي(عقدة_ابن، مزارة، بيان) {
			ارجع صح؛
		}
	}
	مزارة(عقدة) = 2؛
	ارجع خطأ؛
}


دالة هل_داغ(بيان: سند[مـصفوفة[مـصفوفة[صـحيح]]]): ثـنائي {
	عرف مزارة: مـصفوفة[صـحيح]؛
	
	عرف دليل1: صـحيح؛
	عرف عدد_المكونات: صـحيح = 0؛
	لكل دليل1 = 0 ، دليل1 < بيان.هات_الطول() ، دليل1++ {
		عرف دليل2: صـحيح؛
		لكل دليل2 = 0 ، دليل2 < بيان.هات_الطول() ، دليل2++ {
			مزارة.أضف(0)؛
		}

		إذا هل_حلقي(دليل1، مزارة، بيان) {
			ارجع خطأ؛
		}
		مزارة.فرغ()؛
	}
	
	ارجع صح؛
}


دالة رئيسي() {
	عرف بيان: مـصفوفة[مـصفوفة[صـحيح]]؛
	بيان.أضف(مـصفوفة[صـحيح]({1}))؛
	بيان.أضف(مـصفوفة[صـحيح]({2}))؛
	بيان.أضف(مـصفوفة[صـحيح]({3}))؛
	بيان.أضف(مـصفوفة[صـحيح]())؛
	
	إذا هل_داغ(بيان) {
		طـرفية.اطبع("The graph is a DAG\n")؛
	}
	وإلا {
		طـرفية.اطبع("The graph is not a DAG\n")؛
	}
}

رئيسي()؛
