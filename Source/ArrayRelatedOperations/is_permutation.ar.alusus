اشمل "مـتم/مـصفوفة"؛
اشمل "مـتم/طـرفية"؛

استخدم مـتم؛


دالة هل_تباديل(م1: سند[مـصفوفة[صـحيح]]، م2: سند[مـصفوفة[صـحيح]]): ثـنائي {
	إذا م1.هات_الطول() != م2.هات_الطول() {
		ارجع خطأ؛
	}
	
	عرف مزار: مـصفوفة[ثـنائي]؛
	عرف دليل1: صـحيح؛
	لكل دليل1 = 0 ، دليل1 < م2.هات_الطول() ، دليل1++ {
		مزار.أضف(خطأ)؛
	}
	
	عرف دليل2: صـحيح؛
	لكل دليل1 = 0 ، دليل1 < م1.هات_الطول() ، دليل1++ {
		عرف موجود: ثـنائي = خطأ؛
		لكل دليل2 = 0 ، دليل2 < م2.هات_الطول() ، دليل2++ {
			إذا م1(دليل1) == م2(دليل2) && !مزار(دليل2) {
				موجود = صح؛
				مزار(دليل2) = صح؛
				اقطع؛
			}
		}
		إذا !موجود {
			ارجع خطأ؛
		}
	}
	ارجع صح؛
}

دالة رئيسي() {
	عرف م1: مـصفوفة[صـحيح]({1, 2, 3, 4, 5})؛
	عرف م2: مـصفوفة[صـحيح]({5, 4, 3, 2, 1})؛
	
	عرف نتيجة: ثـنائي = هل_تباديل(م1، م2)؛
	
	إذا نتيجة {
		طـرفية.اطبع("arr2 is a permutation of arr1.\ج")؛
	}
	وإلا {
		طـرفية.اطبع("arr2 is not a permutation of arr1.\ج")؛
	}
}

رئيسي()؛
